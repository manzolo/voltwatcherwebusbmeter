# https://help.github.com/en/actions
name: Voltwatcher CI process
on:
  push:
    tags:        
      # Push events to every tag not containing /
      - '*'
      
env:
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  APP_ENV: ${{ vars.APP_ENV }}
  APP_SECRET: ${{ secrets.APP_SECRET }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  MAILER_USER: ${{ secrets.MAILER_USER }}
  OPENWEATHERMAP_APIKEY: ${{ secrets.OPENWEATHERMAP_APIKEY }}
  locale: ${{ vars.LOCALE }}
  JWT_SECRET_KEY: ${{ vars.JWT_SECRET_KEY }}
  JWT_PUBLIC_KEY: ${{ vars.JWT_PUBLIC_KEY }}
  JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
  MAILER_DSN: ${{ secrets.MAILER_DSN }}
  
jobs:
  symfony:
    environment: prod
    name: Voltwatcher (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-22.04
    services:
      # https://docs.docker.com/samples/library/mysql/
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v3

      - name: CreateDB
        uses: ./.github/workflows/createdb

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache-vars
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "timestamp=$(date +"%s")" >> $GITHUB_OUTPUT
          
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache-vars.outputs.dir }}
          key: ${{ runner.os }}-composer-2-latest-${{ steps.composer-cache-vars.outputs.timestamp }}
          restore-keys: |
            ${{ runner.os }}-composer-2-latest-
            ${{ runner.os }}-composer-2-
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --no-interaction

      - name: Scan composer.lock
        uses: symfonycorp/security-checker-action@v4
        
      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
      - name: Check the Symfony console
        run: bin/console about

      ## —— Coding standards ✨ ————————————————————————————————————————————————
      - name: Symfony Checks
        uses: ./.github/workflows/symfony_checks

      - name: Set up ANT
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Test with Ant
        run: ant

      - name: Build & push Docker image
        id: Build-and-Push-Docker-Image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: manzolo/voltwatcher
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}        