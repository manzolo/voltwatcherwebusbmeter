security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username


    firewalls:
        legacyapi_sendvolt:
            pattern: ^/api/sendvolt
            security: false

        legacyapi_appgetsettings:
            pattern: ^/api/appgetsettings
            security: false

        legacyapi_getserverdatetime:
            pattern: ^/api/getserverdatetime
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        resources:
            pattern:   ^/resources
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false


        main:
          pattern: ^/
          form_login:
              provider: fos_userbundle
              csrf_token_generator: security.csrf.token_manager

          logout_on_user_change: true
          logout:       true
          anonymous:    true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/(_(profiler|wdt)|css|images|js|accedi), roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/Operatori/, role: ROLE_SUPER_ADMIN }
        - { path: ^/Ruoli/, role: ROLE_SUPER_ADMIN }
        - { path: ^/Permessi/, role: ROLE_SUPER_ADMIN }
        - { path: ^/MenuApplicazione/, role: ROLE_SUPER_ADMIN }
        - { path: ^/OpzioniTabella/, role: ROLE_SUPER_ADMIN }
        - { path: ^/Tabelle/aggiorna, role: ROLE_SUPER_ADMIN }
        - { path: ^/Tabelle/edit, role: ROLE_SUPER_ADMIN }
        - { path: ^/Tabelle/new, role: ROLE_SUPER_ADMIN }
        - { path: ^/Tabelle/delete, role: ROLE_SUPER_ADMIN }
        - { path: ^/adminpanel, role: [ROLE_SUPER_ADMIN] }

        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        #Con questa configurazione se l'utente non è censito in SSO oppure non ha ruoli in FOS VIENE BLOCCATO CON Error 403
        #- { path: ^/, role: [ROLE_USER] }
        #Con questa configurazione se l'utente non è censito in SSO oppure non ha ruoli in FOS VIENE FATTO ENTRARE UGUALMENTE
        - { path: ^/, role: [ROLE_USER,ROLE_UNDEFINED_USER] }
